# Copyright (c) 2015 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

-
  name: "obtain CDH API version"
  uri:
    url: "http://{{ arcadia.cdh.managerHost }}:{{ arcadia.cdh.managerPort }}/api/version"
    user: "{{ arcadia.cdh.managerUser }}"
    password: "{{ arcadia.cdh.managerPass }}"
    return_content: "yes"
  register: "cdh_api_version"
- 
  name: "obtain HDFS config"
  uri: 
    url: "http://{{ arcadia.cdh.managerHost }}:{{ arcadia.cdh.managerPort }}/api/{{ cdh_api_version.content }}/clusters/{{ arcadia.cdh.clusterName }}/services/{{ arcadia.cdh.hdfsName }}/config"
    user: "{{ arcadia.cdh.managerUser }}"
    password: "{{ arcadia.cdh.managerPass }}"
    return_content: "yes"
  register: "cdh_hdfs_remote_config"
- 
  name: "obtain ACL user list"
  set_fact: 
    dfs_block_local_path_access_user: "{{ item.value.split(',') | union([arcadia.sysuser.name]) | unique }}"
  when: item.name == "dfs_block_local_path_access_user"
  with_items: "{{ cdh_hdfs_remote_config.json['items'] }}"
- 
  name: "set HDFS service config"
  cdh: action=set_config entity=service service=hdfs name={{ item.name }} value={{ item.value }}
  with_items: 
    - { name: "dfs_block_local_path_access_user", value: "{{ dfs_block_local_path_access_user | join(',') }}" }
    - { name: "dfs_datanode_read_shortcircuit", value: "true" }
    - { name: "dfs_datanode_hdfs_blocks_metadata_enabled", value: "true" }
- 
  name: "set HDFS gateway role config"
  cdh: action=set_config entity=role service=hdfs role=hdfsgateway name={{ item.name }} value={{ item.value }}
  with_items: 
    - { name: "dfs_client_read_shortcircuit", value: "true" }
-
  name: "deploy CDH cluster client config"
  cdh: action=deploy_configuration service=hdfs
  notify:
    - restart cluster
- 
  meta: flush_handlers
