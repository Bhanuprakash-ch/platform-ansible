# Copyright (c) 2015 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

- 
  name: "check for existing node principals"
  command: /usr/sbin/kadmin.local -q 'get_strings {{ arcadia.sysuser.name }}/{{ item }}@{{ arcadia.kerberos.realm }}'
  with_items: "{{ groups[arcadia.nodes.common] }}"
  register: "check_node_principals"
  changed_when: "False"
- 
  name: "add missing kerberos principals of Arcadia nodes"
  command: /usr/sbin/kadmin.local -q 'addprinc -randkey {{ item.stderr.split('\"')[1] }}'
  when: "item.stderr != ''"
  register: "node_principals"
  with_items: "{{ check_node_principals.results }}"
- 
  name: "check for existing arcviz principal"
  command: /usr/sbin/kadmin.local -q 'get_strings {{ arcadia.kerberos.user }}@{{ arcadia.kerberos.realm }}'
  register: "check_arcviz_principal"
  changed_when: "False"
- 
  name: "add missing kerberos principal for arcviz"
  command: /usr/sbin/kadmin.local -q 'addprinc -randkey {{ arcadia.kerberos.user }}@{{ arcadia.kerberos.realm }}'
  when: "check_arcviz_principal.stderr != ''"
  register: "arcviz_principal"
- 
  name: "generate keytabs for Arcadia nodes"
  command: /usr/sbin/kadmin.local -q 'xst -norandkey -k {{ item }}.keytab {{ arcadia.sysuser.name }}/{{ item }} HTTP/{{ item }} {{ arcadia.kerberos.user }}@{{ arcadia.kerberos.realm }}'
  when: "node_principals.changed or arcviz_principal.changed"
  register: "generate_keytabs"
  with_items: "{{ groups[arcadia.nodes.common] }}"
- 
  name: "fetch generated Arcadia keytabs"
  fetch: 
    src: "{{ item }}.keytab"
    dest: "/tmp/"
    flat: "yes"
  when: "generate_keytabs.changed"
  with_items: "{{ groups[arcadia.nodes.common] }}"
- 
  name: "cleanup generated Arcadia keytabs"
  file: 
    path: "{{ item }}.keytab"
    state: "absent"
  when: "generate_keytabs.changed"
  with_items: "{{ groups[arcadia.nodes.common] }}"
