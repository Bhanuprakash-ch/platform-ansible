# Copyright (c) 2015 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#deploying sentry
- name: deploy sentry
  cdh: action=deploy_base_roles service=sentry host={{ groups['cdh-master'][1] }}
  register: sentry_deployed 
 
- name: set sentry server role properties
  cdh: action=set_config entity=service service=sentry name={{ item.name }} value={{ item.value }}
  with_items:
    - { name: 'hdfs_service', value: 'HDFS' }
    - { name: 'zookeeper_service', value: 'ZOOKEEPER' }
    - { name: 'sentry_server_database_type', value: 'mysql' }
    - { name: 'sentry_server_database_host', value: "{{ groups['cdh-manager'][0] }}" }
    - { name: 'sentry_server_database_name', value: 'sentry' }
    - { name: 'sentry_server_database_port', value: '3306' }
    - { name: 'sentry_server_database_user', value: 'sentry' }
    - { name: 'sentry_server_database_password', value: '{{ hive_mysql_root_password }}' }
    - { name: 'sentry_server_config_safety_valve', value: '<property><name>sentry.hdfs.integration.path.prefixes</name><value>/user/hive/warehouse,/org</value></property>' }

- name: create sentry database
  cdh: action=run_command service=sentry name=SentryCreateDbTables
  when: sentry_deployed|changed

- name: set hdfs service properties for sentry
  cdh: action=set_config entity=service service=hdfs name={{ item.name }} value={{ item.value }}
  with_items:
    - { name: 'hdfs_sentry_sync_enable', value: 'true' }
    - { name: 'dfs_namenode_acls_enabled', value: 'true' }
    - { name: 'hdfs_sentry_sync_path_prefixes', value: '/user/hive/warehouse,/org' }
    
- name: set hive service properties for sentry
  cdh: action=set_config entity=service service=hive name={{ item.name }} value={{ item.value }}
  with_items:
    - { name: 'sentry_service', value: 'SENTRY' }
    - { name: 'hive_service_config_safety_valve', value: '<property><name>sentry.hdfs.integration.path.prefixes</name><value>/user/hive/warehouse,/org</value></property>' }
    
- name: set hive hiveserver2 properties for sentry
  cdh: action=set_config entity=role service=hive role=hiveserver2 name={{ item.name }} value={{ item.value }}
  with_items:
    - { name: 'hiveserver2_enable_impersonation', value: 'false' }
    
- name: set yarn nodemanager service properties for sentry
  cdh: action=set_config entity=role service=yarn role=nodemanager name={{ item.name }} value={{ item.value }}
  with_items:
    - { name: 'container_executor_min_user_id', value: '0' }
    
- name: set hue server role properties for sentry
  cdh: action=set_config entity=service service=hue name={{ item.name }} value={{ item.value }}
  with_items:
    - { name: 'sentry_service', value: 'SENTRY' }
   
- name: restart cluster after enabling sentry
  cdh: action=cluster state=restarted
  when: sentry_deployed|changed

- wait_for: host={{ groups['cdh-master'][0] }} port=10000
  when: sentry_deployed|changed

- name: init kerberos if enabled
  ekerberos: usr='{{ item.usr }}' pass='{{ item.pass }}'
  delegate_to: '{{ groups["cdh-master"][0] }}'
  with_items:
    - { usr: 'hive', pass: '{{ kadmin_pass }}' }

- name: execute sentry database commands
  shell: sudo -u hive beeline -u 'jdbc:hive2://{{ groups["cdh-master"][0] }}:10000/default;principal=hive/{{ groups["cdh-master"][0] }}@CLOUDERA;auth=kerberos;'
           -e "{{ item.command }}" && touch /etc/sentry_{{ item.file }} creates=/etc/sentry_{{ item.file }}
  with_items:
    - { command: 'CREATE ROLE admin;', file: 'create_role' }
    - { command: 'GRANT ALL ON SERVER server1 TO ROLE admin;', file: 'grant_role' }
    - { command: 'GRANT ROLE admin TO GROUP hive;', file: 'grant_hive' }
    - { command: 'GRANT ROLE admin TO GROUP hue;', file: 'grant_hue' }
  delegate_to: '{{ groups["cdh-master"][0] }}'
